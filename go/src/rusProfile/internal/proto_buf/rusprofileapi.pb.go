// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: rusprofileapi.proto

package grpc_from0

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// выходные данные о компании
type Company struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	INN     string `protobuf:"bytes,2,opt,name=INN,proto3" json:"INN,omitempty"`
	CEOName string `protobuf:"bytes,3,opt,name=CEOName,proto3" json:"CEOName,omitempty"`
	OGRN    string `protobuf:"bytes,4,opt,name=OGRN,proto3" json:"OGRN,omitempty"`
}

func (x *Company) Reset() {
	*x = Company{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rusprofileapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Company) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Company) ProtoMessage() {}

func (x *Company) ProtoReflect() protoreflect.Message {
	mi := &file_rusprofileapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Company.ProtoReflect.Descriptor instead.
func (*Company) Descriptor() ([]byte, []int) {
	return file_rusprofileapi_proto_rawDescGZIP(), []int{0}
}

func (x *Company) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Company) GetINN() string {
	if x != nil {
		return x.INN
	}
	return ""
}

func (x *Company) GetCEOName() string {
	if x != nil {
		return x.CEOName
	}
	return ""
}

func (x *Company) GetOGRN() string {
	if x != nil {
		return x.OGRN
	}
	return ""
}

type GetCompanyByINNRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	INN string `protobuf:"bytes,1,opt,name=INN,proto3" json:"INN,omitempty"`
}

func (x *GetCompanyByINNRequest) Reset() {
	*x = GetCompanyByINNRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rusprofileapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyByINNRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyByINNRequest) ProtoMessage() {}

func (x *GetCompanyByINNRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rusprofileapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyByINNRequest.ProtoReflect.Descriptor instead.
func (*GetCompanyByINNRequest) Descriptor() ([]byte, []int) {
	return file_rusprofileapi_proto_rawDescGZIP(), []int{1}
}

func (x *GetCompanyByINNRequest) GetINN() string {
	if x != nil {
		return x.INN
	}
	return ""
}

type GetCompanyByINNResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Company *Company `protobuf:"bytes,1,opt,name=Company,proto3" json:"Company,omitempty"`
}

func (x *GetCompanyByINNResponse) Reset() {
	*x = GetCompanyByINNResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rusprofileapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyByINNResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyByINNResponse) ProtoMessage() {}

func (x *GetCompanyByINNResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rusprofileapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyByINNResponse.ProtoReflect.Descriptor instead.
func (*GetCompanyByINNResponse) Descriptor() ([]byte, []int) {
	return file_rusprofileapi_proto_rawDescGZIP(), []int{2}
}

func (x *GetCompanyByINNResponse) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

var File_rusprofileapi_proto protoreflect.FileDescriptor

var file_rusprofileapi_proto_rawDesc = []byte{
	0x0a, 0x13, 0x72, 0x75, 0x73, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x72, 0x75, 0x73, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x61, 0x70, 0x69, 0x22, 0x5d, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x4e, 0x4e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x49, 0x4e, 0x4e, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x45, 0x4f, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x45, 0x4f, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x4f, 0x47, 0x52, 0x4e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4f,
	0x47, 0x52, 0x4e, 0x22, 0x2a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x42, 0x79, 0x49, 0x4e, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x49, 0x4e, 0x4e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x49, 0x4e, 0x4e, 0x22,
	0x4b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x79, 0x49,
	0x4e, 0x4e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x75,
	0x73, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x32, 0x77, 0x0a, 0x11,
	0x52, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x62, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42,
	0x79, 0x49, 0x4e, 0x4e, 0x12, 0x25, 0x2e, 0x72, 0x75, 0x73, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42,
	0x79, 0x49, 0x4e, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x72, 0x75,
	0x73, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x79, 0x49, 0x4e, 0x4e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x17, 0x5a, 0x15, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x62, 0x75, 0x66, 0x3b, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x30, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rusprofileapi_proto_rawDescOnce sync.Once
	file_rusprofileapi_proto_rawDescData = file_rusprofileapi_proto_rawDesc
)

func file_rusprofileapi_proto_rawDescGZIP() []byte {
	file_rusprofileapi_proto_rawDescOnce.Do(func() {
		file_rusprofileapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_rusprofileapi_proto_rawDescData)
	})
	return file_rusprofileapi_proto_rawDescData
}

var file_rusprofileapi_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_rusprofileapi_proto_goTypes = []interface{}{
	(*Company)(nil),                 // 0: rusprofileapi.Company
	(*GetCompanyByINNRequest)(nil),  // 1: rusprofileapi.GetCompanyByINNRequest
	(*GetCompanyByINNResponse)(nil), // 2: rusprofileapi.GetCompanyByINNResponse
}
var file_rusprofileapi_proto_depIdxs = []int32{
	0, // 0: rusprofileapi.GetCompanyByINNResponse.Company:type_name -> rusprofileapi.Company
	1, // 1: rusprofileapi.RusProfileService.GetCompanyByINN:input_type -> rusprofileapi.GetCompanyByINNRequest
	2, // 2: rusprofileapi.RusProfileService.GetCompanyByINN:output_type -> rusprofileapi.GetCompanyByINNResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_rusprofileapi_proto_init() }
func file_rusprofileapi_proto_init() {
	if File_rusprofileapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rusprofileapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Company); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rusprofileapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyByINNRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rusprofileapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyByINNResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rusprofileapi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rusprofileapi_proto_goTypes,
		DependencyIndexes: file_rusprofileapi_proto_depIdxs,
		MessageInfos:      file_rusprofileapi_proto_msgTypes,
	}.Build()
	File_rusprofileapi_proto = out.File
	file_rusprofileapi_proto_rawDesc = nil
	file_rusprofileapi_proto_goTypes = nil
	file_rusprofileapi_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RusProfileServiceClient is the client API for RusProfileService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RusProfileServiceClient interface {
	// получает информацию о компании
	GetCompanyByINN(ctx context.Context, in *GetCompanyByINNRequest, opts ...grpc.CallOption) (*GetCompanyByINNResponse, error)
}

type rusProfileServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRusProfileServiceClient(cc grpc.ClientConnInterface) RusProfileServiceClient {
	return &rusProfileServiceClient{cc}
}

func (c *rusProfileServiceClient) GetCompanyByINN(ctx context.Context, in *GetCompanyByINNRequest, opts ...grpc.CallOption) (*GetCompanyByINNResponse, error) {
	out := new(GetCompanyByINNResponse)
	err := c.cc.Invoke(ctx, "/rusprofileapi.RusProfileService/GetCompanyByINN", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RusProfileServiceServer is the server API for RusProfileService service.
type RusProfileServiceServer interface {
	// получает информацию о компании
	GetCompanyByINN(context.Context, *GetCompanyByINNRequest) (*GetCompanyByINNResponse, error)
}

// UnimplementedRusProfileServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRusProfileServiceServer struct {
}

func (*UnimplementedRusProfileServiceServer) GetCompanyByINN(context.Context, *GetCompanyByINNRequest) (*GetCompanyByINNResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCompanyByINN not implemented")
}

func RegisterRusProfileServiceServer(s *grpc.Server, srv RusProfileServiceServer) {
	s.RegisterService(&_RusProfileService_serviceDesc, srv)
}

func _RusProfileService_GetCompanyByINN_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCompanyByINNRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RusProfileServiceServer).GetCompanyByINN(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusprofileapi.RusProfileService/GetCompanyByINN",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RusProfileServiceServer).GetCompanyByINN(ctx, req.(*GetCompanyByINNRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RusProfileService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rusprofileapi.RusProfileService",
	HandlerType: (*RusProfileServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCompanyByINN",
			Handler:    _RusProfileService_GetCompanyByINN_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rusprofileapi.proto",
}
